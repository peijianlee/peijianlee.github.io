[{"data":1,"prerenderedAt":346},["ShallowReactive",2],{"content-query-FWk6miMr18":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"navigation":9,"body":16,"_type":340,"_id":341,"_source":342,"_file":343,"_stem":344,"_extension":345},"/posts/20220720","posts",false,"","JavaScript 解构赋值详解",{"title":8,"description":10,"date":11,"account":12,"tags":13},"解构赋值（Destructuring Assignment）是 ES6 引入的语法特性，允许通过模式匹配的方式从数组或对象中提取值，并赋值给对应的变量。可以显著简化从数据结构中获取值的操作。","2022-07-20 16:40:30","lpj",[14,15],"es6","解构赋值",{"type":17,"children":18,"toc":327},"root",[19,28,42,61,90,94,104,107,122,133,138,150,155,164,169,175,184,189,198,203,227,236,259,264,287,296],{"type":20,"tag":21,"props":22,"children":24},"element","h2",{"id":23},"什么是解构赋值",[25],{"type":26,"value":27},"text","什么是解构赋值？",{"type":20,"tag":29,"props":30,"children":31},"p",{},[32,34,40],{"type":26,"value":33},"解构赋值（Destructuring Assignment）是 ES6 引入的语法特性，允许通过",{"type":20,"tag":35,"props":36,"children":37},"strong",{},[38],{"type":26,"value":39},"模式匹配",{"type":26,"value":41},"的方式从数组或对象中提取值，并赋值给对应的变量。可以显著简化从数据结构中获取值的操作。",{"type":20,"tag":29,"props":43,"children":44},{},[45,47],{"type":26,"value":46},"这是一个带脚注的文本",{"type":20,"tag":48,"props":49,"children":50},"sup",{},[51],{"type":20,"tag":52,"props":53,"children":58},"a",{"href":54,"ariaDescribedBy":55,"dataFootnoteRef":7,"id":57},"#user-content-fn-1",[56],"footnote-label","user-content-fnref-1",[59],{"type":26,"value":60},"1",{"type":20,"tag":62,"props":63,"children":66},"ul",{"className":64},[65],"contains-task-list",[67,81],{"type":20,"tag":68,"props":69,"children":72},"li",{"className":70},[71],"task-list-item",[73,79],{"type":20,"tag":74,"props":75,"children":78},"input",{"checked":76,"disabled":76,"type":77},true,"checkbox",[],{"type":26,"value":80}," 已完成任务",{"type":20,"tag":68,"props":82,"children":84},{"className":83},[71],[85,88],{"type":20,"tag":74,"props":86,"children":87},{"disabled":76,"type":77},[],{"type":26,"value":89}," 未完成任务",{"type":20,"tag":91,"props":92,"children":93},"hr",{},[],{"type":20,"tag":29,"props":95,"children":96},{},[97],{"type":20,"tag":98,"props":99,"children":101},"code",{"className":100},[],[102],{"type":26,"value":103},"print(\"Hello World\")",{"type":20,"tag":91,"props":105,"children":106},{},[],{"type":20,"tag":108,"props":109,"children":110},"details",{},[111,117],{"type":20,"tag":112,"props":113,"children":114},"summary",{},[115],{"type":26,"value":116},"点击展开",{"type":20,"tag":29,"props":118,"children":119},{},[120],{"type":26,"value":121},"隐藏内容在此",{"type":20,"tag":29,"props":123,"children":124},{},[125,127],{"type":26,"value":126},"高亮需用HTML：",{"type":20,"tag":128,"props":129,"children":130},"mark",{},[131],{"type":26,"value":132},"高亮文本",{"type":20,"tag":21,"props":134,"children":136},{"id":135},"基础用法",[137],{"type":26,"value":135},{"type":20,"tag":139,"props":140,"children":145},"pre",{"className":141,"code":143,"language":144,"meta":7},[142],"language-js","// 基础用法\nconst colors = ['红', '绿', '蓝'];\nconst [firstColor, secondColor] = colors;\nconsole.log(firstColor);  // 输出：红\nconsole.log(secondColor); // 输出：绿\n\n// 跳过元素\nconst [,, thirdColor] = colors;\nconsole.log(thirdColor);  // 输出：蓝\n\n// 默认值\nconst [a = 10, b = 20] = [1];\nconsole.log(a, b); // 输出：1 20\n\n// 交换变量\nlet x = 1, y = 2;\n[x, y] = [y, x];\nconsole.log(x, y); // 输出：2 1\n","js",[146],{"type":20,"tag":98,"props":147,"children":148},{"__ignoreMap":7},[149],{"type":26,"value":143},{"type":20,"tag":21,"props":151,"children":153},{"id":152},"对象解构",[154],{"type":26,"value":152},{"type":20,"tag":139,"props":156,"children":159},{"className":157,"code":158,"language":144,"meta":7},[142],"const user = {\n  name: '李华',\n  age: 25,\n  address: {\n    city: '北京',\n    postcode: '100000'\n  }\n};\n\n// 基础解构\nconst { name, age } = user;\nconsole.log(name, age); // 输出：李华 25\n\n// 别名解构\nconst { name: userName } = user;\nconsole.log(userName); // 输出：李华\n\n// 嵌套解构\nconst { address: { city } } = user;\nconsole.log(city); // 输出：北京\n\n// 默认值\nconst { gender = '男' } = user;\nconsole.log(gender); // 输出：男\n",[160],{"type":20,"tag":98,"props":161,"children":162},{"__ignoreMap":7},[163],{"type":26,"value":158},{"type":20,"tag":21,"props":165,"children":167},{"id":166},"高级用法",[168],{"type":26,"value":166},{"type":20,"tag":170,"props":171,"children":173},"h3",{"id":172},"函数参数解构",[174],{"type":26,"value":172},{"type":20,"tag":139,"props":176,"children":179},{"className":177,"code":178,"language":144,"meta":7},[142],"// 对象参数解构\nfunction printUser({name, age = 18}) {\n  console.log(`${name}今年${age}岁`);\n}\nprintUser(user); // 输出：李华今年25岁\nprintUser({name: '王芳'}); // 输出：王芳今年18岁\n\n// 数组参数解构\nfunction getFirst([firstItem]) {\n  return firstItem;\n}\nconsole.log(getFirst(colors)); // 输出：红\n",[180],{"type":20,"tag":98,"props":181,"children":182},{"__ignoreMap":7},[183],{"type":26,"value":178},{"type":20,"tag":170,"props":185,"children":187},{"id":186},"混合解构",[188],{"type":26,"value":186},{"type":20,"tag":139,"props":190,"children":193},{"className":191,"code":192,"language":144,"meta":7},[142],"const data = {\n  results: [\n    { id: 1, value: 'A' },\n    { id: 2, value: 'B' }\n  ]\n};\n\nconst {\n  results: [\n    { value: firstValue },\n    { value: secondValue }\n  ]\n} = data;\n\nconsole.log(firstValue, secondValue); // 输出：A B\n",[194],{"type":20,"tag":98,"props":195,"children":196},{"__ignoreMap":7},[197],{"type":26,"value":192},{"type":20,"tag":21,"props":199,"children":201},{"id":200},"使用注意事项",[202],{"type":26,"value":200},{"type":20,"tag":204,"props":205,"children":206},"ol",{},[207,217],{"type":20,"tag":68,"props":208,"children":209},{},[210,215],{"type":20,"tag":35,"props":211,"children":212},{},[213],{"type":26,"value":214},"变量声明",{"type":26,"value":216},"：解构赋值需要配合 let/const/var 使用",{"type":20,"tag":68,"props":218,"children":219},{},[220,225],{"type":20,"tag":35,"props":221,"children":222},{},[223],{"type":26,"value":224},"已声明变量",{"type":26,"value":226},"：对已存在的变量解构时需要加括号",{"type":20,"tag":139,"props":228,"children":231},{"className":229,"code":230,"language":144,"meta":7},[142],"let a, b;\n({a, b} = {a: 1, b: 2});\n",[232],{"type":20,"tag":98,"props":233,"children":234},{"__ignoreMap":7},[235],{"type":26,"value":230},{"type":20,"tag":204,"props":237,"children":239},{"start":238},3,[240,249],{"type":20,"tag":68,"props":241,"children":242},{},[243,247],{"type":20,"tag":35,"props":244,"children":245},{},[246],{"type":26,"value":39},{"type":26,"value":248},"：解构的左右两侧结构要保持一致",{"type":20,"tag":68,"props":250,"children":251},{},[252,257],{"type":20,"tag":35,"props":253,"children":254},{},[255],{"type":26,"value":256},"默认值生效条件",{"type":26,"value":258},"：只有当对应值为 undefined 时默认值才会生效",{"type":20,"tag":21,"props":260,"children":262},{"id":261},"典型应用场景",[263],{"type":26,"value":261},{"type":20,"tag":62,"props":265,"children":266},{},[267,272,277,282],{"type":20,"tag":68,"props":268,"children":269},{},[270],{"type":26,"value":271},"处理 API 返回的 JSON 数据",{"type":20,"tag":68,"props":273,"children":274},{},[275],{"type":26,"value":276},"交换变量值",{"type":20,"tag":68,"props":278,"children":279},{},[280],{"type":26,"value":281},"导入模块特定方法",{"type":20,"tag":68,"props":283,"children":284},{},[285],{"type":26,"value":286},"函数返回多个值",{"type":20,"tag":139,"props":288,"children":291},{"className":289,"code":290,"language":144,"meta":7},[142],"function getCoords() {\n  return [12.34, 56.78];\n}\nconst [lng, lat] = getCoords();\n",[292],{"type":20,"tag":98,"props":293,"children":294},{"__ignoreMap":7},[295],{"type":26,"value":290},{"type":20,"tag":297,"props":298,"children":301},"section",{"className":299,"dataFootnotes":7},[300],"footnotes",[302,309],{"type":20,"tag":21,"props":303,"children":306},{"className":304,"id":56},[305],"sr-only",[307],{"type":26,"value":308},"Footnotes",{"type":20,"tag":204,"props":310,"children":311},{},[312],{"type":20,"tag":68,"props":313,"children":315},{"id":314},"user-content-fn-1",[316,318],{"type":26,"value":317},"脚注内容显示在此处 ",{"type":20,"tag":52,"props":319,"children":324},{"href":320,"ariaLabel":321,"className":322,"dataFootnoteBackref":7},"#user-content-fnref-1","Back to reference 1",[323],"data-footnote-backref",[325],{"type":26,"value":326},"↩",{"title":7,"searchDepth":328,"depth":328,"links":329},2,[330,331,332,333,337,338,339],{"id":23,"depth":328,"text":27},{"id":135,"depth":328,"text":135},{"id":152,"depth":328,"text":152},{"id":166,"depth":328,"text":166,"children":334},[335,336],{"id":172,"depth":238,"text":172},{"id":186,"depth":238,"text":186},{"id":200,"depth":328,"text":200},{"id":261,"depth":328,"text":261},{"id":56,"depth":328,"text":308},"markdown","content:posts:20220720.md","content","posts/20220720.md","posts/20220720","md",1745134959178]