[{"data":1,"prerenderedAt":338},["ShallowReactive",2],{"content-query-gatq1ftLGU":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"navigation":9,"body":16,"_type":332,"_id":333,"_source":334,"_file":335,"_stem":336,"_extension":337},"/posts/20211105","posts",false,"","前端微服务 - ifram 解决方案",{"title":8,"description":10,"date":11,"account":12,"tags":13},"我们一般安装的是最新版本的 node ,但是有时候，我们又需要使用低版本的 node ,在不借助第三方工具的情况下，我们只能卸载现有版本,安装需要的版本，这样显然很麻烦，今天就来介绍一个windows系统使用的 node 多版本管理工具 nvm ，全称是 node.js version management ,可以在多个 node 版本之间自由切换！","2021-10-28 10:20:00","lpj",[14,15],"前端微服务","iframe",{"type":17,"children":18,"toc":319},"root",[19,27,50,56,77,89,95,116,121,133,142,148,161,170,182,191,197,202,235,244,256,265,271,290,299,310],{"type":20,"tag":21,"props":22,"children":24},"element","h2",{"id":23},"介绍",[25],{"type":26,"value":23},"text",{"type":20,"tag":28,"props":29,"children":30},"p",{},[31,33,40,42,48],{"type":26,"value":32},"作为 html 提供 iframe 也可以作为前端微服务的解决方案，也是最简单的方案之一。配置过程中只需要通过 ",{"type":20,"tag":34,"props":35,"children":37},"code",{"className":36},[],[38],{"type":26,"value":39},"window.addEventListener('message', fn(), false)",{"type":26,"value":41}," 和 ",{"type":20,"tag":34,"props":43,"children":45},{"className":44},[],[46],{"type":26,"value":47},"postMessage",{"type":26,"value":49}," 两个方法，使父级子级进行数据通讯，从而达到数据共享的功能。",{"type":20,"tag":21,"props":51,"children":53},{"id":52},"_1主项目配置",[54],{"type":26,"value":55},"1、主项目配置",{"type":20,"tag":28,"props":57,"children":58},{},[59,61,67,69,75],{"type":26,"value":60},"在 ",{"type":20,"tag":34,"props":62,"children":64},{"className":63},[],[65],{"type":26,"value":66},"views/projects",{"type":26,"value":68}," 目录下新建一个 ",{"type":20,"tag":34,"props":70,"children":72},{"className":71},[],[73],{"type":26,"value":74},".vue",{"type":26,"value":76}," 文件，代码如下：",{"type":20,"tag":78,"props":79,"children":84},"pre",{"className":80,"code":82,"language":83,"meta":7},[81],"language-js","\u003Ctemplate>\n  \u003Cdiv v-loading=\"showLading\"\n    element-loading-text=\"子项目模块加载中\">\n    \u003Ciframe\n      ref=\"monitor\"\n      width=\"100%\" height=\"100%\"\n      v-if=\"src\"\n      @load=\"postMsg\"\n      :src=\"src\">\n    \u003C/iframe>\n  \u003C/div>\n\u003C/template>\n\n\u003Cscript>\nexport default {\n  name: 'microApp',\n  components: {\n  },\n  data() {\n    return {\n      showLading: true,\n      src: ''\n    }\n  },\n  created() {\n    // microApps 为全局引入\n    this.src = microApps.microApp\n  },\n  mounted() {\n    // 监听 iframe 上传信息\n    window.addEventListener('message', this.getMsg, false)\n  },\n  methods: {\n    // 下传数据\n    postMsg() {\n      this.showLading = false\n      let _placeInfo = JSON.parse(sessionStorage.getItem('placeInfo'))\n      this.$refs.monitor.contentWindow.postMessage({\n        placeInfo: _placeInfo,\n        axiosurls\n      }, this.src)\n    },\n    // 获取消息\n    getMsg (event) {\n      let eventData = event.data\n      console.log('iframe 基站接收到的消息：', eventData)\n      // todo something\n    }\n  },\n  beforeDestroy() {\n    // 清除监听事件\n    window.removeEventListener('message', this.getMsg, false)\n  }\n}\n\u003C/script>\n\u003Cstyle scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n\u003C/style>\n","js",[85],{"type":20,"tag":34,"props":86,"children":87},{"__ignoreMap":7},[88],{"type":26,"value":82},{"type":20,"tag":21,"props":90,"children":92},{"id":91},"_2子项目修改",[93],{"type":26,"value":94},"2、子项目修改",{"type":20,"tag":28,"props":96,"children":97},{},[98,100,106,108,114],{"type":26,"value":99},"接下来只需要在 ",{"type":20,"tag":34,"props":101,"children":103},{"className":102},[],[104],{"type":26,"value":105},"app.vue",{"type":26,"value":107}," 通过 ",{"type":20,"tag":34,"props":109,"children":111},{"className":110},[],[112],{"type":26,"value":113},"window.addEventListener('message', this.receiveMsg, true)",{"type":26,"value":115}," 方法监听到父级下传的信息，接收到信息后可以对信息进行保存或修改。",{"type":20,"tag":28,"props":117,"children":118},{},[119],{"type":26,"value":120},"如获取到登录信息后，对登录信息进行保存，就可以实现登录共享了。",{"type":20,"tag":122,"props":123,"children":125},"h3",{"id":124},"_21判断是否是套用-iframe",[126,128],{"type":26,"value":127},"2.1、判断是否是套用 ",{"type":20,"tag":34,"props":129,"children":131},{"className":130},[],[132],{"type":26,"value":15},{"type":20,"tag":78,"props":134,"children":137},{"className":135,"code":136,"language":83,"meta":7},[81],"if(window.top === window.self) {\n    console.log('不在iframe中')\n} else {\n    console.log('在iframe中')\n    // 可以标识一下是从 iframe 引入的\n    this.IFRAME_INFO.IS_IFRAME = true\n}\n",[138],{"type":20,"tag":34,"props":139,"children":140},{"__ignoreMap":7},[141],{"type":26,"value":136},{"type":20,"tag":122,"props":143,"children":145},{"id":144},"_22监听消息获取",[146],{"type":26,"value":147},"2.2、监听消息获取",{"type":20,"tag":28,"props":149,"children":150},{},[151,153,159],{"type":26,"value":152},"在生命周期的 ",{"type":20,"tag":34,"props":154,"children":156},{"className":155},[],[157],{"type":26,"value":158},"mounted()",{"type":26,"value":160}," 添加监听代码",{"type":20,"tag":78,"props":162,"children":165},{"className":163,"code":164,"language":83,"meta":7},[81],"// 从父级获取缓存\nthis.$nextTick(() => {\n    window.addEventListener('message', this.receiveMsg, true)\n})\n",[166],{"type":20,"tag":34,"props":167,"children":168},{"__ignoreMap":7},[169],{"type":26,"value":164},{"type":20,"tag":28,"props":171,"children":172},{},[173,174,180],{"type":26,"value":60},{"type":20,"tag":34,"props":175,"children":177},{"className":176},[],[178],{"type":26,"value":179},"methods:",{"type":26,"value":181}," 添加获取方法的函数",{"type":20,"tag":78,"props":183,"children":186},{"className":184,"code":185,"language":83,"meta":7},[81],"receiveMsg(event) {\n    // todo something\n}\n",[187],{"type":20,"tag":34,"props":188,"children":189},{"__ignoreMap":7},[190],{"type":26,"value":185},{"type":20,"tag":122,"props":192,"children":194},{"id":193},"_23向父级项目上传消息",[195],{"type":26,"value":196},"2.3、向父级项目上传消息",{"type":20,"tag":28,"props":198,"children":199},{},[200],{"type":26,"value":201},"如果当遇到子项目退出登录信息时，需要将已登录的信息通知到父级项目，从而使父级项目也退出登录信息。",{"type":20,"tag":28,"props":203,"children":204},{},[205,207,212,214,220,221,227,229],{"type":26,"value":206},"首先先拿到 ",{"type":20,"tag":34,"props":208,"children":210},{"className":209},[],[211],{"type":26,"value":15},{"type":26,"value":213}," 的来源 ",{"type":20,"tag":34,"props":215,"children":217},{"className":216},[],[218],{"type":26,"value":219},"source",{"type":26,"value":41},{"type":20,"tag":34,"props":222,"children":224},{"className":223},[],[225],{"type":26,"value":226},"url",{"type":26,"value":228}," 的值 ",{"type":20,"tag":34,"props":230,"children":232},{"className":231},[],[233],{"type":26,"value":234},"origin",{"type":20,"tag":78,"props":236,"children":239},{"className":237,"code":238,"language":83,"meta":7},[81],"receiveMsg(event) {\n    if(event.data.placeInfo) {\n        // 暂存 iframe 的来源\n        this.IFRAME_INFO.TRAGET = event.source\n        // 暂存 iframe 的url地址\n        this.IFRAME_INFO.ORIGIN = event.origin\n    }\n}\n",[240],{"type":20,"tag":34,"props":241,"children":242},{"__ignoreMap":7},[243],{"type":26,"value":238},{"type":20,"tag":28,"props":245,"children":246},{},[247,249,254],{"type":26,"value":248},"然后通过 ",{"type":20,"tag":34,"props":250,"children":252},{"className":251},[],[253],{"type":26,"value":47},{"type":26,"value":255}," 上传数据状态",{"type":20,"tag":78,"props":257,"children":260},{"className":258,"code":259,"language":83,"meta":7},[81],"// 如果是从iframe引入，需要往上传数据状态\nif (this.IFRAME_INFO.IS_IFRAME) {\n    this.IFRAME_INFO.TRAGET.postMessage({placeInfo: ''}, this.IFRAME_INFO.ORIGIN)\n}\n",[261],{"type":20,"tag":34,"props":262,"children":263},{"__ignoreMap":7},[264],{"type":26,"value":259},{"type":20,"tag":122,"props":266,"children":268},{"id":267},"_24向父级项目接收子级项目上传消息",[269],{"type":26,"value":270},"2.4、向父级项目接收子级项目上传消息",{"type":20,"tag":28,"props":272,"children":273},{},[274,276,281,283,288],{"type":26,"value":275},"在父级项目下对应 ",{"type":20,"tag":34,"props":277,"children":279},{"className":278},[],[280],{"type":26,"value":74},{"type":26,"value":282}," 页面的 ",{"type":20,"tag":34,"props":284,"children":286},{"className":285},[],[287],{"type":26,"value":158},{"type":26,"value":289}," 去监听上传消息",{"type":20,"tag":78,"props":291,"children":294},{"className":292,"code":293,"language":83,"meta":7},[81],"// 监听 iframe 上传消息\nwindow.addEventListener('message', this.getMsg, false)\n",[295],{"type":20,"tag":34,"props":296,"children":297},{"__ignoreMap":7},[298],{"type":26,"value":293},{"type":20,"tag":28,"props":300,"children":301},{},[302,303,308],{"type":26,"value":60},{"type":20,"tag":34,"props":304,"children":306},{"className":305},[],[307],{"type":26,"value":179},{"type":26,"value":309}," 添加接收消息的函数",{"type":20,"tag":78,"props":311,"children":314},{"className":312,"code":313,"language":83,"meta":7},[81],"// 获取消息\ngetMsg (event) {\n    let eventData = event.data\n    console.log('iframe 基站接收到的消息：', eventData)\n    // todo something\n}\n",[315],{"type":20,"tag":34,"props":316,"children":317},{"__ignoreMap":7},[318],{"type":26,"value":313},{"title":7,"searchDepth":320,"depth":320,"links":321},2,[322,323,324],{"id":23,"depth":320,"text":23},{"id":52,"depth":320,"text":55},{"id":91,"depth":320,"text":94,"children":325},[326,329,330,331],{"id":124,"depth":327,"text":328},3,"2.1、判断是否是套用 iframe",{"id":144,"depth":327,"text":147},{"id":193,"depth":327,"text":196},{"id":267,"depth":327,"text":270},"markdown","content:posts:20211105.md","content","posts/20211105.md","posts/20211105","md",1745134959176]