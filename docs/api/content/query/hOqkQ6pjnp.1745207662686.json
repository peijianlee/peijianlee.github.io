{"_path":"/posts/20220720","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"JavaScript 解构赋值详解","description":"","navigation":{"title":"JavaScript 解构赋值详解","description":"解构赋值（Destructuring Assignment）是 ES6 引入的语法特性，允许通过模式匹配的方式从数组或对象中提取值，并赋值给对应的变量。可以显著简化从数据结构中获取值的操作。","date":"2022-07-20 16:40:30","account":"lpj","tags":["es6","解构赋值"]},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"什么是解构赋值"},"children":[{"type":"text","value":"什么是解构赋值？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"解构赋值（Destructuring Assignment）是 ES6 引入的语法特性，允许通过"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"模式匹配"}]},{"type":"text","value":"的方式从数组或对象中提取值，并赋值给对应的变量。可以显著简化从数据结构中获取值的操作。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这是一个带脚注的文本"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-1","ariaDescribedBy":["footnote-label"],"dataFootnoteRef":"","id":"user-content-fnref-1"},"children":[{"type":"text","value":"1"}]}]}]},{"type":"element","tag":"ul","props":{"className":["contains-task-list"]},"children":[{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"checked":true,"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" 已完成任务"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" 未完成任务"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"print(\"Hello World\")"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"点击展开"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"隐藏内容在此"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"高亮需用HTML："},{"type":"element","tag":"mark","props":{},"children":[{"type":"text","value":"高亮文本"}]}]},{"type":"element","tag":"h2","props":{"id":"基础用法"},"children":[{"type":"text","value":"基础用法"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"// 基础用法\nconst colors = ['红', '绿', '蓝'];\nconst [firstColor, secondColor] = colors;\nconsole.log(firstColor);  // 输出：红\nconsole.log(secondColor); // 输出：绿\n\n// 跳过元素\nconst [,, thirdColor] = colors;\nconsole.log(thirdColor);  // 输出：蓝\n\n// 默认值\nconst [a = 10, b = 20] = [1];\nconsole.log(a, b); // 输出：1 20\n\n// 交换变量\nlet x = 1, y = 2;\n[x, y] = [y, x];\nconsole.log(x, y); // 输出：2 1\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 基础用法\nconst colors = ['红', '绿', '蓝'];\nconst [firstColor, secondColor] = colors;\nconsole.log(firstColor);  // 输出：红\nconsole.log(secondColor); // 输出：绿\n\n// 跳过元素\nconst [,, thirdColor] = colors;\nconsole.log(thirdColor);  // 输出：蓝\n\n// 默认值\nconst [a = 10, b = 20] = [1];\nconsole.log(a, b); // 输出：1 20\n\n// 交换变量\nlet x = 1, y = 2;\n[x, y] = [y, x];\nconsole.log(x, y); // 输出：2 1\n"}]}]},{"type":"element","tag":"h2","props":{"id":"对象解构"},"children":[{"type":"text","value":"对象解构"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const user = {\n  name: '李华',\n  age: 25,\n  address: {\n    city: '北京',\n    postcode: '100000'\n  }\n};\n\n// 基础解构\nconst { name, age } = user;\nconsole.log(name, age); // 输出：李华 25\n\n// 别名解构\nconst { name: userName } = user;\nconsole.log(userName); // 输出：李华\n\n// 嵌套解构\nconst { address: { city } } = user;\nconsole.log(city); // 输出：北京\n\n// 默认值\nconst { gender = '男' } = user;\nconsole.log(gender); // 输出：男\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const user = {\n  name: '李华',\n  age: 25,\n  address: {\n    city: '北京',\n    postcode: '100000'\n  }\n};\n\n// 基础解构\nconst { name, age } = user;\nconsole.log(name, age); // 输出：李华 25\n\n// 别名解构\nconst { name: userName } = user;\nconsole.log(userName); // 输出：李华\n\n// 嵌套解构\nconst { address: { city } } = user;\nconsole.log(city); // 输出：北京\n\n// 默认值\nconst { gender = '男' } = user;\nconsole.log(gender); // 输出：男\n"}]}]},{"type":"element","tag":"h2","props":{"id":"高级用法"},"children":[{"type":"text","value":"高级用法"}]},{"type":"element","tag":"h3","props":{"id":"函数参数解构"},"children":[{"type":"text","value":"函数参数解构"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"// 对象参数解构\nfunction printUser({name, age = 18}) {\n  console.log(`${name}今年${age}岁`);\n}\nprintUser(user); // 输出：李华今年25岁\nprintUser({name: '王芳'}); // 输出：王芳今年18岁\n\n// 数组参数解构\nfunction getFirst([firstItem]) {\n  return firstItem;\n}\nconsole.log(getFirst(colors)); // 输出：红\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 对象参数解构\nfunction printUser({name, age = 18}) {\n  console.log(`${name}今年${age}岁`);\n}\nprintUser(user); // 输出：李华今年25岁\nprintUser({name: '王芳'}); // 输出：王芳今年18岁\n\n// 数组参数解构\nfunction getFirst([firstItem]) {\n  return firstItem;\n}\nconsole.log(getFirst(colors)); // 输出：红\n"}]}]},{"type":"element","tag":"h3","props":{"id":"混合解构"},"children":[{"type":"text","value":"混合解构"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"const data = {\n  results: [\n    { id: 1, value: 'A' },\n    { id: 2, value: 'B' }\n  ]\n};\n\nconst {\n  results: [\n    { value: firstValue },\n    { value: secondValue }\n  ]\n} = data;\n\nconsole.log(firstValue, secondValue); // 输出：A B\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const data = {\n  results: [\n    { id: 1, value: 'A' },\n    { id: 2, value: 'B' }\n  ]\n};\n\nconst {\n  results: [\n    { value: firstValue },\n    { value: secondValue }\n  ]\n} = data;\n\nconsole.log(firstValue, secondValue); // 输出：A B\n"}]}]},{"type":"element","tag":"h2","props":{"id":"使用注意事项"},"children":[{"type":"text","value":"使用注意事项"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"变量声明"}]},{"type":"text","value":"：解构赋值需要配合 let/const/var 使用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"已声明变量"}]},{"type":"text","value":"：对已存在的变量解构时需要加括号"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"let a, b;\n({a, b} = {a: 1, b: 2});\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"let a, b;\n({a, b} = {a: 1, b: 2});\n"}]}]},{"type":"element","tag":"ol","props":{"start":3},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"模式匹配"}]},{"type":"text","value":"：解构的左右两侧结构要保持一致"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"默认值生效条件"}]},{"type":"text","value":"：只有当对应值为 undefined 时默认值才会生效"}]}]},{"type":"element","tag":"h2","props":{"id":"典型应用场景"},"children":[{"type":"text","value":"典型应用场景"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"处理 API 返回的 JSON 数据"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"交换变量值"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"导入模块特定方法"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"函数返回多个值"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"function getCoords() {\n  return [12.34, 56.78];\n}\nconst [lng, lat] = getCoords();\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"function getCoords() {\n  return [12.34, 56.78];\n}\nconst [lng, lat] = getCoords();\n"}]}]},{"type":"element","tag":"section","props":{"className":["footnotes"],"dataFootnotes":""},"children":[{"type":"element","tag":"h2","props":{"className":["sr-only"],"id":"footnote-label"},"children":[{"type":"text","value":"Footnotes"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{"id":"user-content-fn-1"},"children":[{"type":"text","value":"脚注内容显示在此处 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-1","ariaLabel":"Back to reference 1","className":["data-footnote-backref"],"dataFootnoteBackref":""},"children":[{"type":"text","value":"↩"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"什么是解构赋值","depth":2,"text":"什么是解构赋值？"},{"id":"基础用法","depth":2,"text":"基础用法"},{"id":"对象解构","depth":2,"text":"对象解构"},{"id":"高级用法","depth":2,"text":"高级用法","children":[{"id":"函数参数解构","depth":3,"text":"函数参数解构"},{"id":"混合解构","depth":3,"text":"混合解构"}]},{"id":"使用注意事项","depth":2,"text":"使用注意事项"},{"id":"典型应用场景","depth":2,"text":"典型应用场景"},{"id":"footnote-label","depth":2,"text":"Footnotes"}]}},"_type":"markdown","_id":"content:posts:20220720.md","_source":"content","_file":"posts/20220720.md","_stem":"posts/20220720","_extension":"md"}