{"_path":"/posts/20211105","_dir":"posts","_draft":false,"_partial":false,"_locale":"","title":"前端微服务 - ifram 解决方案","description":"","navigation":{"title":"前端微服务 - ifram 解决方案","description":"我们一般安装的是最新版本的 node ,但是有时候，我们又需要使用低版本的 node ,在不借助第三方工具的情况下，我们只能卸载现有版本,安装需要的版本，这样显然很麻烦，今天就来介绍一个windows系统使用的 node 多版本管理工具 nvm ，全称是 node.js version management ,可以在多个 node 版本之间自由切换！","date":"2021-10-28 10:20:00","account":"lpj","tags":["前端微服务","iframe"]},"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"介绍"},"children":[{"type":"text","value":"介绍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"作为 html 提供 iframe 也可以作为前端微服务的解决方案，也是最简单的方案之一。配置过程中只需要通过 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"window.addEventListener('message', fn(), false)"}]},{"type":"text","value":" 和 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"postMessage"}]},{"type":"text","value":" 两个方法，使父级子级进行数据通讯，从而达到数据共享的功能。"}]},{"type":"element","tag":"h2","props":{"id":"_1主项目配置"},"children":[{"type":"text","value":"1、主项目配置"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"views/projects"}]},{"type":"text","value":" 目录下新建一个 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".vue"}]},{"type":"text","value":" 文件，代码如下："}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"<template>\n  <div v-loading=\"showLading\"\n    element-loading-text=\"子项目模块加载中\">\n    <iframe\n      ref=\"monitor\"\n      width=\"100%\" height=\"100%\"\n      v-if=\"src\"\n      @load=\"postMsg\"\n      :src=\"src\">\n    </iframe>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'microApp',\n  components: {\n  },\n  data() {\n    return {\n      showLading: true,\n      src: ''\n    }\n  },\n  created() {\n    // microApps 为全局引入\n    this.src = microApps.microApp\n  },\n  mounted() {\n    // 监听 iframe 上传信息\n    window.addEventListener('message', this.getMsg, false)\n  },\n  methods: {\n    // 下传数据\n    postMsg() {\n      this.showLading = false\n      let _placeInfo = JSON.parse(sessionStorage.getItem('placeInfo'))\n      this.$refs.monitor.contentWindow.postMessage({\n        placeInfo: _placeInfo,\n        axiosurls\n      }, this.src)\n    },\n    // 获取消息\n    getMsg (event) {\n      let eventData = event.data\n      console.log('iframe 基站接收到的消息：', eventData)\n      // todo something\n    }\n  },\n  beforeDestroy() {\n    // 清除监听事件\n    window.removeEventListener('message', this.getMsg, false)\n  }\n}\n</script>\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n</style>\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n  <div v-loading=\"showLading\"\n    element-loading-text=\"子项目模块加载中\">\n    <iframe\n      ref=\"monitor\"\n      width=\"100%\" height=\"100%\"\n      v-if=\"src\"\n      @load=\"postMsg\"\n      :src=\"src\">\n    </iframe>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'microApp',\n  components: {\n  },\n  data() {\n    return {\n      showLading: true,\n      src: ''\n    }\n  },\n  created() {\n    // microApps 为全局引入\n    this.src = microApps.microApp\n  },\n  mounted() {\n    // 监听 iframe 上传信息\n    window.addEventListener('message', this.getMsg, false)\n  },\n  methods: {\n    // 下传数据\n    postMsg() {\n      this.showLading = false\n      let _placeInfo = JSON.parse(sessionStorage.getItem('placeInfo'))\n      this.$refs.monitor.contentWindow.postMessage({\n        placeInfo: _placeInfo,\n        axiosurls\n      }, this.src)\n    },\n    // 获取消息\n    getMsg (event) {\n      let eventData = event.data\n      console.log('iframe 基站接收到的消息：', eventData)\n      // todo something\n    }\n  },\n  beforeDestroy() {\n    // 清除监听事件\n    window.removeEventListener('message', this.getMsg, false)\n  }\n}\n</script>\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n</style>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"_2子项目修改"},"children":[{"type":"text","value":"2、子项目修改"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接下来只需要在 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"app.vue"}]},{"type":"text","value":" 通过 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"window.addEventListener('message', this.receiveMsg, true)"}]},{"type":"text","value":" 方法监听到父级下传的信息，接收到信息后可以对信息进行保存或修改。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如获取到登录信息后，对登录信息进行保存，就可以实现登录共享了。"}]},{"type":"element","tag":"h3","props":{"id":"_21判断是否是套用-iframe"},"children":[{"type":"text","value":"2.1、判断是否是套用 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"iframe"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"if(window.top === window.self) {\n    console.log('不在iframe中')\n} else {\n    console.log('在iframe中')\n    // 可以标识一下是从 iframe 引入的\n    this.IFRAME_INFO.IS_IFRAME = true\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"if(window.top === window.self) {\n    console.log('不在iframe中')\n} else {\n    console.log('在iframe中')\n    // 可以标识一下是从 iframe 引入的\n    this.IFRAME_INFO.IS_IFRAME = true\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_22监听消息获取"},"children":[{"type":"text","value":"2.2、监听消息获取"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在生命周期的 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"mounted()"}]},{"type":"text","value":" 添加监听代码"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"// 从父级获取缓存\nthis.$nextTick(() => {\n    window.addEventListener('message', this.receiveMsg, true)\n})\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 从父级获取缓存\nthis.$nextTick(() => {\n    window.addEventListener('message', this.receiveMsg, true)\n})\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"methods:"}]},{"type":"text","value":" 添加获取方法的函数"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"receiveMsg(event) {\n    // todo something\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"receiveMsg(event) {\n    // todo something\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_23向父级项目上传消息"},"children":[{"type":"text","value":"2.3、向父级项目上传消息"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果当遇到子项目退出登录信息时，需要将已登录的信息通知到父级项目，从而使父级项目也退出登录信息。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"首先先拿到 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"iframe"}]},{"type":"text","value":" 的来源 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"source"}]},{"type":"text","value":" 和 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"url"}]},{"type":"text","value":" 的值 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"origin"}]}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"receiveMsg(event) {\n    if(event.data.placeInfo) {\n        // 暂存 iframe 的来源\n        this.IFRAME_INFO.TRAGET = event.source\n        // 暂存 iframe 的url地址\n        this.IFRAME_INFO.ORIGIN = event.origin\n    }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"receiveMsg(event) {\n    if(event.data.placeInfo) {\n        // 暂存 iframe 的来源\n        this.IFRAME_INFO.TRAGET = event.source\n        // 暂存 iframe 的url地址\n        this.IFRAME_INFO.ORIGIN = event.origin\n    }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然后通过 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"postMessage"}]},{"type":"text","value":" 上传数据状态"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"// 如果是从iframe引入，需要往上传数据状态\nif (this.IFRAME_INFO.IS_IFRAME) {\n    this.IFRAME_INFO.TRAGET.postMessage({placeInfo: ''}, this.IFRAME_INFO.ORIGIN)\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 如果是从iframe引入，需要往上传数据状态\nif (this.IFRAME_INFO.IS_IFRAME) {\n    this.IFRAME_INFO.TRAGET.postMessage({placeInfo: ''}, this.IFRAME_INFO.ORIGIN)\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_24向父级项目接收子级项目上传消息"},"children":[{"type":"text","value":"2.4、向父级项目接收子级项目上传消息"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在父级项目下对应 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".vue"}]},{"type":"text","value":" 页面的 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"mounted()"}]},{"type":"text","value":" 去监听上传消息"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"// 监听 iframe 上传消息\nwindow.addEventListener('message', this.getMsg, false)\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 监听 iframe 上传消息\nwindow.addEventListener('message', this.getMsg, false)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"methods:"}]},{"type":"text","value":" 添加接收消息的函数"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"// 获取消息\ngetMsg (event) {\n    let eventData = event.data\n    console.log('iframe 基站接收到的消息：', eventData)\n    // todo something\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 获取消息\ngetMsg (event) {\n    let eventData = event.data\n    console.log('iframe 基站接收到的消息：', eventData)\n    // todo something\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"介绍","depth":2,"text":"介绍"},{"id":"_1主项目配置","depth":2,"text":"1、主项目配置"},{"id":"_2子项目修改","depth":2,"text":"2、子项目修改","children":[{"id":"_21判断是否是套用-iframe","depth":3,"text":"2.1、判断是否是套用 iframe"},{"id":"_22监听消息获取","depth":3,"text":"2.2、监听消息获取"},{"id":"_23向父级项目上传消息","depth":3,"text":"2.3、向父级项目上传消息"},{"id":"_24向父级项目接收子级项目上传消息","depth":3,"text":"2.4、向父级项目接收子级项目上传消息"}]}]}},"_type":"markdown","_id":"content:posts:20211105.md","_source":"content","_file":"posts/20211105.md","_stem":"posts/20211105","_extension":"md"}